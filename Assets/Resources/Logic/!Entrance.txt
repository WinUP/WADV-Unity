// 自动类型转换以右侧表达式类型为主

VNS测试脚本。首先测试无角色对话。

[角色 编号=测试 显示名="测试"]
[角色 编号=测试2 显示名="另一个测试"]

#测试 现在测试多角色的对话。
#测试2 如果这句话显示为"另一个测试"则没有问题。
\+这句话用来测试转义字符，本对话开头应该有一个+。\n这里应该显示在第二行上。
#测试 这里测试基本指令，首先暂停2秒。[暂停=2000]然后等待点击。[暂停]之后把字号[字号=+5]加大并[颜色=#808080]上色[/颜色]然后回到[/字号]原始大小。
#测试 现在测试变量声明和赋值。

@temp = [对象 0=@false 1=@false 3=TEMP]
@TEMP = true
@temp3 = @(@temp->3)

#测试2 变量的值应该为true：[@temp3]

@temp3 = @TEMP = @temp = @null

[对话 角色=测试2 内容=("这里测试复杂对话，(1 + 2) * 3 = " + ((1 + 2) * 3)) 广播]
[对话 角色=[角色 编号=测试3 显示名="第三个测试"] 内容="这里测试复合指令，这句话应该是由第三个测试说的"]

@temp = !!@角色#测试3

#测试 这里测试自动变量，如果第三个测试存在，这里应该是true:[@temp]

@temp = @null

;scene 测试场景1 @var1 @var2=1
    #测试 这里是测试场景1，var1的值为[@var1]，var2的值为[@var2]

#测试 下面测试场景变量传递，本次var1为1，var2为2。

;call 测试场景1 var1=1 var2=2

#测试 下面测试场景默认变量值，本次var1为1，var2为1。

;call 测试场景1 var1=1 

@temp = !(;if @SystemLanguage == default
    1
;else
    0
)

#测试 测试内联if指令，如果当前是默认语言这里显示1，否则显示0: [@temp]

@temp = @null

    ;scene 测试场景2 @var1 @var2
        @var1 + @var2
    
    @temp = (;call 测试场景2 var1=1 var2=2)
        
    #测试 这是作用域内的场景返回值测试，这个值应该为3: [@temp]

#测试 由于刚才在作用域内，此时这里应该没有任何东西: [@temp]

@temp = 3
@temp2 = 1

;while @temp > 0
    @temp2 *= 2
    @temp -= 1

#测试 循环测试，这里应该为8: [@temp2]

@temp = @temp2 = @null

@temp = 语言切换至 + (;lang en)
@temp2 = @true
[切换语言 目标=en]

@temp = @temp + (;if @temp == en + @temp2
    0
;else
    1
) + 1

#测试 测试语言切换后是否指令仍旧可用，这里应该是1: [@temp]

@temp = @temp2 = @null
